plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

ext {
	set('springAiVersion', "1.0.0-SNAPSHOT")
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
	implementation platform("org.springframework.ai:spring-ai-bom:${springAiVersion}")

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter'

	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.contrib.otel:encoder-brave:0.1.0-SNAPSHOT'

	//implementation 'io.micrometer:micrometer-tracing-bridge-otel'
	//implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
	implementation 'io.micrometer:micrometer-registry-otlp'
	implementation 'net.ttddyy.observation:datasource-micrometer-spring-boot:1.0.5'

	testAndDevelopmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
